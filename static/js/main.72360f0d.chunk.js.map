{"version":3,"sources":["components/GifItem.js","components/GifList.js","components/SearchBar.js","components/GifModal.js","index.js"],"names":["GifItem","_ref","gif","onGifSelect","react_default","a","createElement","className","onClick","src","images","downsized","url","alt","GifList","props","gifItems","gifs","map","image","components_GifItem","key","id","SearchBar","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","term","setState","onTermChange","_this2","placeholder","onChange","event","onInputChange","target","value","React","Component","GifModal","selectedGif","lib_default","isOpen","modalIsOpen","onRequestClose","original","href","source","rating","App","handleTermChange","concat","replace","request","get","err","res","body","data","components_SearchBar","components_GifList","openModal","components_GifModal","closeModal","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.72360f0d.chunk.js","sourcesContent":["import React from 'react';\r\n//this is each individual item in the diagram.\r\nconst GifItem = ({gif, onGifSelect}) => {\r\n  return (\r\n    <div className=\"gif-item\" onClick={() => onGifSelect(gif)}>\r\n      <img src={gif.images.downsized.url} alt=\"please enable Javascript\" />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default GifItem;","import React from 'react';\r\nimport GifItem from './GifItem';\r\n// this is a stateless component which means it is\r\n// flexible in its contents\r\nconst GifList = (props) => {\r\n  const gifItems = props.gifs.map((image) => {\r\n    return <GifItem key={image.id} \r\n                    gif={image} \r\n                    onGifSelect={props.onGifSelect} />\r\n  });\r\n\r\n  return (\r\n    <div className=\"gif-list\">{gifItems}</div>\r\n  );\r\n};\r\n\r\nexport default GifList;","import React from 'react';\r\n\r\nclass SearchBar extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { term: '' }\r\n    }\r\n    onInputChange(term) {\r\n        this.setState({term});\r\n        this.props.onTermChange(term);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"search\">\r\n                <input placeholder=\"Search for a Gif in a Giffy!\" onChange={event => this.onInputChange(event.target.value)}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport Modal from 'react-modal';\r\n\r\n\r\nconst GifModal = (props) => {\r\n    if (!props.selectedGif) {\r\n        return <div></div>;\r\n    }\r\n    return(\r\n        <Modal\r\n            isOpen={ props.modalIsOpen}\r\n            onRequestClose={ () => props.onRequestClose() }>\r\n            <div className=\"gif-modal\">\r\n                <img src={ props.selectedGif.images.original.url} alt=\"please enable Javascript\"/>\r\n                <p><strong>Source:</strong> <a href= { props.selectedGif.source } >{ props.selectedGif.source}</a></p>\r\n                <p><strong>Rating:</strong> { props.selectedGif.rating }</p>\r\n\r\n                <button onClick={() => props.onRequestClose()}>Close </button>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default GifModal;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport GifList from './components/GifList';\nimport SearchBar from './components/SearchBar';\nimport GifModal from './components/GifModal';\nimport request from 'superagent';\nimport './styles/app.css';\n\nclass App extends Component {\n  //constructor for the gifs\n  constructor(){\n    super();\n\n    this.state = {\n      gifs: [],\n      selectedGif: null,\n      modalIsOpen: false\n    };\n  }\n\n  openModal(gif){\n    this.setState({\n      modalIsOpen: true,\n      selectedGif: gif\n    });\n  }\n\n  closeModal(){\n    this.setState({\n      modalIsOpen: false,\n      selectedGif: null\n    })\n  }\n\n  handleTermChange = (term) => {\n    const url = `http://api.giphy.com/v1/gifs/search?q=${term.replace(/\\s/g, '+')}&api_key=T8B0aFWsJ5E6edMuilem7xYMuDgNwdhA`;\n\n    request.get(url, (err, res) => {\n      this.setState({ gifs: res.body.data})\n      //console.log(res.body.data[0]);\n    });\n    //console.log(term);\n  }\n  //main render method\n  render() {\n    return (\n      <div className=\"App\">\n        <SearchBar onTermChange={this.handleTermChange} />\n        <GifList gifs={this.state.gifs} \n                 onGifSelect={selectedGif => this.openModal(selectedGif) }/>\n        <GifModal modalIsOpen={this.state.modalIsOpen}\n                selectedGif={this.state.selectedGif}\n                onRequestClose={ () => this.closeModal()} />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n//1st layer after root-----------------------------------------\n// this is called the render method"],"sourceRoot":""}